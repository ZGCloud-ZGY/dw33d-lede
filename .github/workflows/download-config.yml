name: Generate_CONFIG

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      ssh:
        type: boolean
        description: 'SSH connection to Actions'
        required: false
        default:  false
  
permissions:
  contents: read
  
jobs:
  makeconfig:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    if: github.event.repository.owner.id == github.event.sender.id
    
    steps:
    
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: master
        
      - name: Space cleanup
        env:
          DEBIAN_FRONTEND: noninteractive
        run: |
          docker rmi `docker images -q`
          sudo rm -rf /usr/share/dotnet /etc/mysql /etc/php /etc/apt/sources.list.d /usr/local/lib/android
          sudo -E apt-get -y purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* adoptopenjdk* mysql* php* mongodb* dotnet* moby* snapd* || true
          sudo -E apt-get update
          sudo -E apt-get -y install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler antlr3 gperf swig
          sudo -E apt-get -y autoremove --purge
          sudo -E apt-get clean
        
      - name: Load custom feeds
        run: |
            sed -i '$a src-git helloworld https://github.com/fw876/helloworld.git' feeds.conf.default
            sed -i '$a src-git lienol https://github.com/Lienol/openwrt-package.git' feeds.conf.default
    
      - name: Update feeds
        run: |
         ./scripts/feeds update -a
         ./scripts/feeds install -a
      - name: Load custom configuration
        run: |
          sed -i 's/192.168.1.1/192.168.10.1/g' package/base-files/files/bin/config_generate
          sed -i 's/OpenWrt/ZGCloud/g' package/base-files/files/bin/config_generate
          sed -i 's/OpenWrt/Internet/g' package/kernel/mac80211/files/lib/wifi/mac80211.sh
          sed -i 's/US/CN/g' package/kernel/mac80211/files/lib/wifi/mac80211.sh

    - name: SSH connection to Actions
      uses: mxschmitt/action-tmate@v3.11
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.ssh }}


    - name: Pack the CONFIG
      id: compile
      run: |
        mkdir bin
        mkdir bin/targets
        mkdir bin/targets/1
        mkdir bin/targets/1/1
        tar -cf bin/targets/1/1/config.tar .config
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV
    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"
    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        touch release.txt
        echo "CONFIG Download" > release.txt
        echo "::set-output name=status::success"
    - name: Upload firmware to release
      uses: softprops/action-gh-release@v1
      if: steps.tag.outputs.status == 'success' && !cancelled()
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.tag.outputs.release_tag }}
        body_path: release.txt
        files: ${{ env.FIRMWARE }}/*
